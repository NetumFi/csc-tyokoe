version: '3.7'

networks:
  infra:
    name: digivisio

volumes:
  jenkins: {}
  sonar: {}
  postgresql: {}
  elasticsearch: {}

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl.key:/ssl/ssl.key
      - ./ssl.pem:/ssl/ssl.pem
    networks:
      - infra

  jenkins:
    image: jenkins/jenkins
    restart: unless-stopped
    environment:
      JENKINS_OPTS: "--prefix=/jenkins"
    networks:
      - infra
    privileged: true
    user: "jenkins:{{ docker_group }}"
    volumes:
      - jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    depends_on:
      - sonar

  sonar:
    image: sonarqube:9.3.0-community
    extra_hosts:
      - host.docker.internal:172.17.0.1
    environment:
      sonar.forceAuthentication: "false"
      SONAR_WEB_CONTEXT: "/sonar"
    volumes:
      - sonar:/opt/sonarqube/data
    networks:
      - infra

  postgres:
    image: postgres:14.2
    volumes:
      - postgresql:/var/lib/postgresql/data/
    user: postgres
    environment:
      - POSTGRES_USER={{ postgres.application.user }}
      - POSTGRES_PASSWORD={{ postgres.application.password }}
    networks:
      - infra

# Monitoring
# ELK
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
#    ports:
#      - "9200:9200"
#      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWOR={{ monitoring.elastic.password }}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - infra

  logstash:
    image: docker.elastic.co/logstash/logstash:8.2.0
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
#    ports:
#      - "5044:5044"
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD={{ monitoring.logstash.internal_password }}
    networks:
      - infra
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.0
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
#    ports:
#      - "5601:5601"
    environment:
      - KIBANA_SYSTEM_PASSWORD={{ monitoring.kibana.system_password }}
      - SERVER_BASEPATH=/kibana
      - SERVER_PUBLICBASEURL=https://{{ domain }}/kibana
    networks:
      - infra
    depends_on:
      - elasticsearch
